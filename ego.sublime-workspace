{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"get",
				"getPosicao"
			],
			[
				"gety",
				"getYRaw"
			],
			[
				"mult",
				"multY"
			],
			[
				"n",
				"nroPlanos"
			],
			[
				"mu",
				"multx"
			],
			[
				"jane",
				"janelaLargura"
			],
			[
				"ge",
				"getTamanho"
			],
			[
				"set",
				"setTime"
			],
			[
				"in",
				"inc\t#include \"…\""
			],
			[
				"ve",
				"velocidade"
			],
			[
				"dE",
				"DEBUG"
			],
			[
				"seguid",
				"seguindo"
			],
			[
				"of",
				"offsetY"
			],
			[
				"MU",
				"multx"
			],
			[
				"text",
				"texturaTela"
			],
			[
				"tex",
				"textura"
			],
			[
				"nu",
				"NULL"
			],
			[
				"Te",
				"texturatela"
			],
			[
				"tama",
				"tamanhoX"
			],
			[
				"ta",
				"tamanhoZ"
			],
			[
				"ini",
				"iniY"
			],
			[
				"segui",
				"seguido"
			],
			[
				"SDL",
				"SDL_FLIP_HORIZONTAL"
			],
			[
				"jan",
				"janelaLargura"
			],
			[
				"terr",
				"terrenoCarregado"
			],
			[
				"inc",
				"include"
			],
			[
				"x",
				"xy"
			],
			[
				"janel",
				"janelaAltura"
			],
			[
				"janela",
				"janelaLargura"
			],
			[
				"Janela",
				"janelaAltura"
			],
			[
				"f",
				"fprintf\tfprintf …"
			],
			[
				"def",
				"define"
			],
			[
				"IN",
				"include"
			],
			[
				"p",
				"public"
			],
			[
				"re",
				"return"
			],
			[
				"de",
				"define"
			],
			[
				"cria",
				"criaFase"
			],
			[
				"fas",
				"faseNomeArquivos"
			],
			[
				"inicia",
				"inicializaSDL"
			],
			[
				"fase",
				"faseAtual"
			],
			[
				"sdl",
				"SDL_SCANCODE_DOWN"
			],
			[
				"print",
				"printMundo"
			],
			[
				"SD",
				"SDL_Surface"
			],
			[
				"sd",
				"SDL_Surface"
			],
			[
				"casse",
				"Casse"
			],
			[
				"un",
				"universo"
			]
		]
	},
	"buffers":
	[
		{
			"file": "include/Universo.h",
			"settings":
			{
				"buffer_size": 1144,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Jogador.h",
			"settings":
			{
				"buffer_size": 1338,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/EntradaSaida.h",
			"settings":
			{
				"buffer_size": 1122,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/EntradaSaida.cpp",
			"settings":
			{
				"buffer_size": 13056,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#ifndef BLOCO_H\n#define BLOCO_H\n#include \"Defines.h\"\n#include \"Coordenada.h\"\n\n\nclass Bloco{\npublic:\n\n\tBloco();\n\n\t//int setLimites(Bloco* lim);\n\tint mover(coordenada c);\n\tint crescer(coordenada c);\n\tint setPosicao(coordenada p);\n\tint setTamanho(coordenada t);\n\n\t//bool estaDentro(coordenada d);\n\t//bool estaDentro(Bloco *b);\n\t//bool estaFora(Bloco *b);\n\n\tBloco colisao(Bloco b);\n\tBloco colisao(Terreno t);\n\n\tcoordenada getPosicao();\n\tcoordenada getTamanho();\n\n\t//int verificaLimites();\n\nprotected:\n\n\t//bool estaEntre(coordenada la, coordenada lb, coordenada p);\n\t//bool estaDentro(Bloco b, coordenada p);\n\n\tcoordenada posicao;\n\tcoordenada tamanho;\n\n\t\n};\n#endif",
			"file": "include/Bloco.h",
			"file_size": 606,
			"file_write_time": 131239085184079459,
			"settings":
			{
				"buffer_size": 659,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Terreno.h",
			"settings":
			{
				"buffer_size": 634,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Periodico.h",
			"settings":
			{
				"buffer_size": 266,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Universo.cpp",
			"settings":
			{
				"buffer_size": 1137,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Terreno.cpp",
			"settings":
			{
				"buffer_size": 1635,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Jogador.cpp",
			"settings":
			{
				"buffer_size": 2398,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include <stdlib.h>\n#include \"../include/Bloco.h\"\n\nBloco::Bloco(){\n\tposicao.x = 0;\n\tposicao.y = 0;\n\tposicao.z = 0;\n\ttamanho = {0,0,0};\n\td(\"criei o bloco; a posição é( %i, %i, %i)\", posicao.x, posicao.y, posicao.z)\n\n};\n\nBloco Bloco::colisao(Bloco *b){\n\tfprintf(stderr, \"%s\\n\",\"me implemente!\" );\n\n}\n\nBloco Bloco::colisao(Terreno *t){\n\t//essa funçao assume q o terreno está em (0,0,0), que vai de y=0 até getY() e q este é positivo\n\t//ta bem porca tbm;\n\n\t//como, a principio, terreno só vem do chão,\n\t//não é necessária testar todos os lado;\n\tBloco intersec;\n\tif(t->getY(posicao.x,posicao.z)>=posicao.y){//aqui houve colisao\n\t\tintersec.crescer({0,t->getY(posicao.x,posicao.z)-posicao.y,0});\n\t}\n\tif(t->getY(posicao.x+tamanho.x,posicao.z)>=posicao.y){\n\t\tintersec.setTamanho({0,t->getY(posicao.x+tamanho.x,posicao.z)-posicao.y,0});\n\t}\n\n\treturn intersec;\n\n}\n\n//int Bloco::verificaLimites(){\n\n\t// if(Limites == NULL){\n\t// \treturn LIMITE_NAO_DEFINIDO\n\t// }\n\n\t// coordenada limA, limB, bloA, bloB\n\n\t// bool ok;\n\n\t// ok = \n\n\t// return DENTRO_DO_LIMITE;\n//};\n\n// bool Bloco::estaEntre(coordenada la, coordenada lb, coordenada p){\n// \t// esta função testa se 'p' esta dentro de um paralelepipedo de diagonal 'la' ,'lb';\n// \t// ATENÇÂO! por enquanto assume que lb >= la em x,y,z;\n\n// \tbool esta;\n\n// \testa = la.x <= p.x;\n// \testa &= la.y <= p.y;\n// \testa &= la.z <= p.z;\n\n// \testa &= lb.x >= p.x;\n// \testa &= lb.y >= p.y;\n// \testa &= lb.z >= p.z;\n\n// \treturn esta;\n// };\n\n//bool Bloco::estaDentro(){/*me implemente*/};\n\n//int Bloco::setLimites(Bloco* lim){/*me implemente*/};\nint Bloco::mover(coordenada c){p(\"nao implementado\")};\nint Bloco::crescer(coordenada c){p(\"nao implementado\")};\nint Bloco::setPosicao(coordenada p){\n\tposicao = p;\n};\nint Bloco::setTamanho(coordenada t){\n\ttamanho = t;\n};\n\n//bool Bloco::estaDentro(coordenada d){/*me implemente*/};\n//bool Bloco::estaDentro(Bloco *b){/*me implemente*/};\n//bool Bloco::estaFora(Bloco *b){/*me implemente*/};\n\ncoordenada Bloco::getPosicao(){\n\t// d(\"tetntarei retornar posição\")\n\t// d(\"que no caso é: ( %i, %i, %i)\", posicao.x, posicao.y, posicao.z)\n\treturn posicao;\n};\n\ncoordenada Bloco::getTamanho(){ return tamanho; };\n\n//bool Bloco::estaEntre(coordenada la, coordenada lb, coordenada p){/*me implemente*/};\n//bool Bloco::estaDentro(Bloco b, coordenada p){/*me implemente*/};",
			"file": "src/Bloco.cpp",
			"file_size": 2316,
			"file_write_time": 131239753617525198,
			"settings":
			{
				"buffer_size": 2319,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Periodico.cpp",
			"settings":
			{
				"buffer_size": 349,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Snippet: ",
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: For Loop"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"view",
				"View: Toggle Menu"
			],
			[
				"vie",
				"View: Toggle Menu"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			]
		],
		"width": 503.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			" import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/trojan/Dropbox/egoismo2",
		"/home/trojan/Dropbox/egoismo2/include",
		"/home/trojan/Dropbox/egoismo2/src"
	],
	"file_history":
	[
		"/home/trojan/Dropbox/egoismo2/src/Fase.cpp",
		"/home/trojan/Dropbox/egoismo2/include/Defines.h",
		"/home/trojan/Dropbox/egoismo2/src/Bloco.cpp",
		"/home/trojan/Dropbox/egoismo2/src/EntradaSaida.cpp",
		"/home/trojan/Dropbox/egoismo2/src/Jogador.cpp",
		"/home/trojan/Dropbox/egoismo2/src/Periodico.cpp",
		"/home/trojan/Dropbox/egoismo2/include/Jogador.h",
		"/home/trojan/Dropbox/egoismo2/src/Universo.cpp",
		"/home/trojan/Dropbox/egoismo2/src/Terreno.cpp",
		"/home/trojan/Dropbox/egoismo2/include/Fase.h",
		"/home/trojan/Dropbox/egoismo2/include/EntradaSaida.h",
		"/home/trojan/Dropbox/egoismo2/include/Terreno.h",
		"/home/trojan/Dropbox/egoismo2/compilarerodar.sh",
		"/home/trojan/Dropbox/egoismo2/include/Bloco.h",
		"/home/trojan/Dropbox/egoismo2/include/Coordenada.h",
		"/home/trojan/Dropbox/egoismo2/include/Universo.h",
		"/home/trojan/Dropbox/egoismo2/main.cpp",
		"/home/trojan/Dropbox/egoismo2/include/Material.h",
		"/home/trojan/Dropbox/egoismo2/include/Periodico.h",
		"/home/trojan/Dropbox/egoismo2/include/Imagem.h",
		"/home/trojan/Dropbox/egoismo2/src/Imagem.c",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/proposta",
		"/home/trojan/.cache/.fr-rZyLzY/ExemploComposicaoCpp1/src/Roda.cpp",
		"/home/trojan/.cache/.fr-Kfu77u/ExemploComposicaoCpp1/src/Automovel.cpp",
		"/home/trojan/Dropbox/egoismo2/include/Corpo.h",
		"/home/trojan/Dropbox/egoismo2/include/Movel.h",
		"/home/trojan/Dropbox/egoismo2/src/Tela.cpp",
		"/home/trojan/Dropbox/egoismo2/src/Corpo.cpp",
		"/home/trojan/Dropbox/egoismo2/src/Movel.cpp",
		"/home/trojan/Dropbox/egoismo2/include/Tela.h",
		"/home/trojan/Dropbox/egoismo2/include/universo.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/teste editor/novo.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/prototipoDeGrafico/main.cpp",
		"/home/trojan/Dropbox/egoismo/include/Material.h",
		"/home/trojan/Dropbox/egoismo/include/Corpo.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/main.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/universo.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/root.cpp",
		"/home/trojan/nx-src-1002/debug.cpp",
		"/home/trojan/nx-src-1002/main.cpp",
		"/home/trojan/nx-src-1002/graphics/graphics.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/teste.bmp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/bloco.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/coordenada.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/bloco.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/compilarerodar.sh",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/camera.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/corpo.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/fase.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/imagem.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/material.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/menu.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/movel.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/terreno.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/universo.h",
		"/home/trojan/Projetos/aprendere/untitled folder/novo.cpp",
		"/home/trojan/Documents/untitled folder/teste.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/compilarerodar.sh",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/bloco.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/corpo.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/fase.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/imagem.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/material.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/menu.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/terreno.cpp",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/camera.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/corpo.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/movel.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/fase.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/imagem.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/material.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/menu.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/terreno.h",
		"/home/trojan/Documents/ProjetoFinalMatheusMattosdeAlmeidaCruz/include/universo.h",
		"/home/trojan/Projetos/aprendere/untitled folder/main.cpp",
		"/home/trojan/Projetos/aprendere/untitled folder/buildrun.sh",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/bloco.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/main.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/imagem.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/terreno.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/fase.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/corpo.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/material.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/menu.cpp",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/src/universo.cpp",
		"/home/trojan/tutorials/04_key_presses/04_key_presses.cpp",
		"/home/trojan/tutorials/08_geometry_rendering/08_geometry_rendering.cpp",
		"/home/trojan/tutorials/13_alpha_blending/13_alpha_blending.cpp",
		"/home/trojan/13_alpha_blending/13_alpha_blending.cpp",
		"/home/trojan/13_alpha_blending/Ltexture.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/testeGeracaoPlanos/main.cpp",
		"/home/trojan/Projetos/aprendere/untitled folder/fase.h",
		"/home/trojan/uMario_Jakowski-master/uNext/main.cpp",
		"/home/trojan/uMario_Jakowski-master/uNext/Core.cpp",
		"/home/trojan/uMario_Jakowski-master/CMakeLists.txt",
		"/home/trojan/uMario_Jakowski-master/uNext/Vine.cpp",
		"/home/trojan/uMario_Jakowski-master/uNext/header.h",
		"/home/trojan/uMario_Jakowski-master/uNext/Minion.cpp",
		"/home/trojan/uMario_Jakowski-master/uNext/Koppa.cpp",
		"/home/trojan/uMario_Jakowski-master/README.md",
		"/home/trojan/Projetos/aprendere/untitled folder/casse.cpp",
		"/home/trojan/Projetos/aprendere/untitled folder/casse.h",
		"/home/trojan/Dropbox/JOGUINHOMATHEUSETROJAN/ProjetoFinalMatheusMattosdeAlmeidaCruz/universo.h",
		"/home/trojan/Projetos/aprendere/untitled folder/casse (copy).h",
		"/home/trojan/Desktop/matriz.c",
		"/home/trojan/Downloads/14542366_1275661765779245_1873232693225678081_o.c"
	],
	"find":
	{
		"height": 52.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			";\n",
			"i",
			"y",
			"x",
			"1000/tempoPassado",
			"=",
			"currentKeyStates",
			" = ",
			"=",
			"y",
			"ini",
			"perspectiva",
			"(nroPlanos-i)",
			"x",
			"fprintf",
			"tentarei pegar o tempo",
			"reporta",
			"getTerrendo",
			"reporta",
			"h",
			".",
			"setInicioFim",
			"set",
			");",
			"R",
			"r",
			"R",
			"r",
			"R",
			"setR",
			";",
			"r",
			"time",
			"void",
			"}\n",
			"=",
			"teclas",
			"novoBloco",
			"novoTerreno",
			"Corpo",
			":\n",
			"mover",
			"*",
			"}",
			";",
			"estaSim",
			"x",
			"Coordenada",
			"Corpo",
			"fase(",
			"inicializaSDL",
			"Corpo",
			"CORPO_H",
			"currentKeyStates",
			"loadTexture",
			"teste",
			"SCREEN_WIDTH",
			"FASE_H",
			"CASSE_H",
			"v"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "include/Universo.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1144,
						"regions":
						{
						},
						"selection":
						[
							[
								900,
								900
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 108.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "include/Jogador.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1338,
						"regions":
						{
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "include/EntradaSaida.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1122,
						"regions":
						{
						},
						"selection":
						[
							[
								359,
								359
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/EntradaSaida.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13056,
						"regions":
						{
						},
						"selection":
						[
							[
								4541,
								4541
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3021.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "include/Bloco.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 659,
						"regions":
						{
						},
						"selection":
						[
							[
								377,
								377
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "include/Terreno.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 634,
						"regions":
						{
						},
						"selection":
						[
							[
								200,
								200
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "include/Periodico.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 266,
						"regions":
						{
						},
						"selection":
						[
							[
								220,
								220
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "src/Universo.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1137,
						"regions":
						{
						},
						"selection":
						[
							[
								426,
								426
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/Terreno.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1635,
						"regions":
						{
						},
						"selection":
						[
							[
								889,
								889
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 486.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/Jogador.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2398,
						"regions":
						{
						},
						"selection":
						[
							[
								286,
								286
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/Bloco.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2319,
						"regions":
						{
						},
						"selection":
						[
							[
								298,
								298
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/Periodico.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 349,
						"regions":
						{
						},
						"selection":
						[
							[
								349,
								349
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.285968028419,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ego.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 231.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
